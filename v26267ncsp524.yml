ComputerSettings:
  Name: v26267ncsp524
  TimeZone: Eastern Standard Time
IpConfiguration:
  DependsOn: ChocolateyPackages
  Adapter:
    NewName: Production
    AddressFamily: IPv4
    IPAddress: 134.67.216.171/24
    GatewayAddress: 134.67.216.1
    DnsServerAddress:
    - 134.67.208.5
    - 161.80.76.28
    - 204.47.79.12
FilesAndFolders:
  Items:
  - SourcePath: '\\v26267ncsp502\ORDChoco\FilesToCopy\accesschk64.exe'
    DestinationPath: C:\Temp\accesschk64.exe
    Type: File
  - SourcePath: '\\v26267ncsp502\ORDChoco\FilesToCopy\NTRights.exe'
    DestinationPath: C:\Temp\NTRights.exe
    Type: File
  - SourcePath: '\\v26267ncsp502\ORDChoco\FilesToCopy\ATP'
    DestinationPath: C:\Temp\ATP
    Type: Directory
    Recurse: true
  - SourcePath: '\\v26267ncsp502\ORDchoco\FilesToCopy\BootHole'
    DestinationPath: C:\BootHole
    Type: Directory
    Recurse: true
    MatchSource: true
DscLcmController:
  MaintenanceWindowMode: Monitor
  MonitorInterval: 00:15:00
  AutoCorrectInterval: 00:15:00
  AutoCorrectIntervalOverride: false
  RefreshInterval: 00:30:00
  RefreshIntervalOverride: false
  ControllerInterval: 00:05:00
  MaintenanceWindowOverride: false
  WriteTranscripts: true
  SendDscTaggingData: true
  MaxLcmRuntime: 00:30:00
Configurations:
- IpConfiguration
- ChocolateyPackages
- ComputerSettings
- FirewallRules
- WindowsFeatures
- FilesAndFolders
- Scripts
- RegistryValues
- ORDRemoteDesktopAdmin
- DscLcmController
- DscTagging
RegistryValues:
  Values:
  - Key: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\Parameters
    ValueName: NtpServer
    ValueData: time.windows.com,0x9
    ValueType: String
    Ensure: Present
    Force: true
FirewallRules:
  Rules:
  - Name: RemoteDesktop-UserMode-In-TCP
    Enabled: true
    Direction: Inbound
    Profile: Any
    Action: Allow
    LocalPort: Any
    RemotePort: Any
    Protocol: Any
  - Name: RemoteDesktop-UserMode-In-UDP
    Enabled: true
    Direction: Inbound
    Profile: Any
    Action: Allow
  - Name: RemoteDesktop-Shadow-In-TCP
    Enabled: true
    Direction: Inbound
    Profile: Any
    Action: Allow
Description: '[Command=(Import-Csv -Path $env:BHProjectPath\DscConfigData\ExternalData.csv -Delimiter ";" | Where-Object ComputerName -eq v26267ncsp524).Description]'
ORDRemoteDesktopAdmin:
  ORD_RDA:
  - IsSingleInstance: Yes
    Ensure: Present
    UserAuthentication: Secure
NodeName: v26267ncsp524
Location: RTP
ChocolateyPackages:
  Software:
    Ensure: Present
  Features:
    Name: useFipsCompliantChecksums
    Ensure: Present
  Sources:
    Name: ORDChoco
    Ensure: Present
    Source: '\\V26267NCSP502\ORDChoco'
  Packages:
  - Name: laps
    Ensure: Present
    ChocolateyOptions:
      Source: ORDChoco
  - Name: sccm
    Ensure: Present
    ChocolateyOptions:
      Source: ORDChoco
  - Name: encase
    Ensure: Present
    ChocolateyOptions:
      Source: ORDChoco
  - Name: MomAgent
    Ensure: Present
    ChocolateyOptions:
      Source: ORDChoco
Name: v26267ncsp524
Scripts:
  Items:
  - Name: InstallATPDefender
    GetScript: |
      $Found = @(Get-ItemProperty -Path 'HKLM:\Software\Microsoft\Windows Advanced Threat Protection\Status' -Name 'OnboardingState' -ErrorAction SilentlyContinue)
      Return @{ Result = $Found.count}
    TestScript: |
      $ReturnHash = [scriptblock]::Create($GetScript).Invoke()
      $ReturnHash.Result -eq 1
    SetScript: |
      c:\temp\ATP\WindowsDefenderATPLocalOnboardingScript.cmd
  - Name: GiveSCOMLogonRights
    GetScript: |
      $Found = @(c:\temp\AccessChk64.exe /accepteula -q -a SeServiceLogonRight | Where-Object {$_ -match 'sv-ord-eoc-scomact'})
      Return @{ Result = $Found.count}
    TestScript: |
      $ReturnHash = [scriptblock]::Create($GetScript).Invoke()
      $ReturnHash.Result -eq 1
    SetScript: |
      c:\temp\ntrights.exe -u sv-ord-eoc-scomact +r SeServiceLogonRight
  - Name: FixIPv6DHCP
    GetScript: |
      $Found = @(Get-NetIPInterface -AddressFamily 'IPv6' | Where-Object {$_.DHCP -ne 'disabled'})
      Return @{ Result = $Found.count}
    TestScript: |
      $ReturnHash = [scriptblock]::Create($GetScript).Invoke()
      $ReturnHash.Result -eq 0
    SetScript: |
      Set-NetIPInterface -AddressFamily IPv6 -Dhcp Disabled
      Set-NetIPInterface -AddressFamily IPv6 -RouterDiscovery Disabled
  - Name: DisableDynamicDNSRegistration
    GetScript: |
      $Clients = @(Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne "Disconnected"} | Get-NetConnectionProfile | Where-Object IPv4Connectivity -ne "NoTraffic" | Get-DNSClient)
      $Found = @($Clients | Where-Object {$_.RegisterThisConnectionsAddress})
      Return @{ Result = $Found.count}
    TestScript: |
      $ReturnHash = [scriptblock]::Create($GetScript).Invoke()
      $ReturnHash.Result -eq 0
    SetScript: |
      $Clients = @(Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne "Disconnected"} | Get-NetConnectionProfile | Where-Object IPv4Connectivity -ne "NoTraffic" | Get-DNSClient)
      Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne "Disconnected"} | Get-NetConnectionProfile | Where-Object IPv4Connectivity -ne "NoTraffic" | Set-DNSClient -RegisterThisConnectionsAddress:$false
  - Name: FixBootHole
    GetScript: |
      test-path C:\BootHole\signature.p7
    TestScript: |
      [scriptblock]::Create($GetScript).Invoke()
    SetScript: |
      Chdir \BootHole
      C:\BootHole\_BootHole.cmd
Environment: Test
WindowsFeatures:
  Name:
  - RDC
DscTagging:
  Environment: Test
  Version: 0.3.0
